import { BANK_LIST, ACCOUNT_FORM } from "./mockData.js";
console.log(BANK_LIST, ACCOUNT_FORM);

// 함수를 설계하는데 가장 중요한 것
// 1. 요구 사항 확인하기 (아웃풋 = 결과값)
// 사용자가 입력한 계좌번호를 선택된 은행의 은행코드에 맞는 계좌 형식으로
// 앞 뒤 2글자를 제외한 나머지를 *로 가리고 -를 넣어서 보여주는 것

// output 결과값이 확인
// 가장 먼저 해야할 것 input 찾아내는 것
/*

(1) 사용자가 입력한 계좌번호
(2) 사용자가 선택한 은행코드와 은행명
(3) 은행코드에 맞는 계좌 형식
(4) 계좌번호 앞뒤 가리고 - 넣어서 보여줄 리스트


input을 토대로 기능을 구현하는 것
한글로 먼저 설계를 하고 실현 가능한지 검증 뒤에 코드를 치기 시작

(1) 계좌번호 입력이 가능한 input을 markup 해당 input의 입력된 값을 가지고 와야한다.
(2) 사용자가 선택한 은행명과 코드를 열기 위해 select에 대한 내용을 채워줘야 한다.
(3) 사용자가 선택한 select의 option 값을 가지고 올 수 있어야 한다.
(4) 사용자가 선택한 값으로 올바른 계좌번호 형식을 알고 있어야 한다.
(5) 계좌 번호 앞 뒤 2글자를 자르고 나머지 자릿수는 *로 표시한다.
(6) 선택된 계좌번호 형식에 맞게 하이픈을 추가한다.

*.repeat(8) 앞글자 2글자, **********, 뒤2글자


(6) 선택된 계좌번호 형식에 맞게 하이픈을 추가한다.

// 이하 검증하는 과정

* 문자열 특정 인덱스에 문자 추가하는 법 = 결과값
* 특정 인덱스 = 하이픈 인덱스

const $selector = document.querySelector('#bank-selector');
let bankcode = $selector.value 

const hipenIndex = [];

ACCOUNT_FORM[bankcode].forEach((el,index)=>{
    if(el === '-') hipenIndex.push(index)
})







구글링..
구글링 할 때 가장 큰 문제점은 결과값을 원하는 것.
구현만 하면 되는 거... 과정(코드)이 중요한 게 아니라 내가 이걸 구현할 수 있다.

*/
